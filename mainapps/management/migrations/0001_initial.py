# Generated by Django 5.2.2 on 2025-06-06 17:49

import django.db.models.deletion
import django.utils.timezone
import mainapps.common.validators
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('cities_light', '0011_alter_city_country_alter_city_region_and_more'),
        ('common', '0001_initial'),
        ('permit', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CompanyProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('po_sequence', models.PositiveIntegerField(default=0)),
                ('inventory_sequence', models.PositiveIntegerField(default=0)),
                ('name', models.CharField(max_length=100, verbose_name='Company name')),
                ('description', models.CharField(blank=True, help_text='Briefly describe the company', max_length=1000, null=True, verbose_name='Company description')),
                ('founded_date', models.DateField(blank=True, null=True, verbose_name='Founded Date')),
                ('employees_count', models.PositiveIntegerField(blank=True, null=True, verbose_name='Number of Employees')),
                ('tax_id', models.CharField(blank=True, max_length=30, null=True, verbose_name='Tax ID/VAT Number')),
                ('website', models.URLField(blank=True, help_text='Company website URL (optional)', verbose_name='Website')),
                ('linkedin', models.URLField(blank=True, null=True, verbose_name='LinkedIn Profile')),
                ('twitter', models.URLField(blank=True, null=True, verbose_name='Twitter Profile')),
                ('instagram', models.URLField(blank=True, null=True, verbose_name='Instagram Profile')),
                ('facebook', models.URLField(blank=True, null=True, verbose_name='Facebook Profile')),
                ('other_link', models.URLField(blank=True, help_text='Link to external company information or profile', verbose_name='Link/Website')),
                ('phone', models.CharField(blank=True, help_text='Contact phone number (optional)', max_length=20, verbose_name='Phone number')),
                ('email', models.EmailField(blank=True, help_text='Contact email address (optional)', max_length=254, null=True, verbose_name='Email')),
                ('is_verified', models.BooleanField(default=False, verbose_name='Verified Company')),
                ('verification_date', models.DateTimeField(blank=True, null=True, verbose_name='Verification Date')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('currency', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='common.currency')),
                ('industry', models.ForeignKey(limit_choices_to={'which_model': 'industry'}, null=True, on_delete=django.db.models.deletion.SET_NULL, to='common.typeof')),
                ('owner', models.OneToOneField(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='company', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Company Profile',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ActivityLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(choices=[('CREATE', 'Creation'), ('UPDATE', 'Modification'), ('DELETE', 'Deletion'), ('APPROVE', 'Approval'), ('CANCEL', 'Cancellation')], max_length=200)),
                ('model_name', models.CharField(max_length=255)),
                ('object_id', models.PositiveIntegerField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('details', models.JSONField(default=dict)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('profile', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='management.companyprofile')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CompanyProfileAddress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('apt_number', models.PositiveIntegerField(blank=True, null=True, verbose_name='Apartment number')),
                ('street_number', models.PositiveIntegerField(blank=True, null=True, verbose_name='Street number')),
                ('street', models.CharField(max_length=255, null=True)),
                ('postal_code', models.CharField(blank=True, help_text='Postal code', max_length=10, null=True, validators=[mainapps.common.validators.validate_postal_code], verbose_name='Postal code')),
                ('city', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='cities_light.city', verbose_name='City/Town')),
                ('country', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='cities_light.country', verbose_name='Country')),
                ('region', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='cities_light.region', verbose_name='Region/State')),
                ('subregion', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='cities_light.subregion', verbose_name='Sub region/LGA')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='companyprofile',
            name='headquarters_address',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='management.companyprofileaddress'),
        ),
        migrations.CreateModel(
            name='PrescriptionFillingPolicies',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Policy name')),
                ('details', models.TextField(unique=True, verbose_name='Details of the policy')),
                ('effective_date', models.DateField(null=True)),
                ('expiration_date', models.DateField(null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('validity_period', models.IntegerField(default=5, help_text='Prescription is valid before how many days')),
                ('quantitity_limit', models.IntegerField()),
                ('refills_allowed', models.IntegerField()),
                ('company', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to='management.companyprofile')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='StaffGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='groups_created', to=settings.AUTH_USER_MODEL)),
                ('permissions', models.ManyToManyField(blank=True, related_name='groups', to='permit.customuserpermission')),
                ('profile', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='management.companyprofile')),
                ('users', models.ManyToManyField(blank=True, related_name='staff_groups', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='StaffRole',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('created_by', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='rolse_created', to=settings.AUTH_USER_MODEL)),
                ('permissions', models.ManyToManyField(blank=True, related_name='roles', to='permit.customuserpermission')),
                ('profile', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='management.companyprofile')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='StaffRoleAssignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('assigned_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('assigned_by', models.ForeignKey(editable=False, help_text='User who assigned the role', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_roles', to=settings.AUTH_USER_MODEL)),
                ('profile', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='management.companyprofile')),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assignments', to='management.staffrole')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='roles', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-start_date'],
                'unique_together': {('user', 'role')},
            },
        ),
    ]
